/* eslint-disable */
const cacheName = "odoo-sw-cache-v9.5";
const staticAssets = [
  "/offpage",
  "/jaswar",
  "/mycss.css",
  "/splashy.js",
  "/web/image/3251-1f7ae7f0/player-ship.png",
  "/web/image/3252-919c1c6e/enemy-ship.png",
  "/web/image/3253-861ca04e/big-fire-powerup.png",
  "/web/image/3254-94237309/parallel-fire-powerup.png",
  "/web/image/3255-6127b1bf/power-up.png",
  "/web/image/3256-ee7a091a/space-background.webp",
  "/web/image/website/1/logo/JAS",
  "/web/image/1392-64c648a6/applog512.PNG",
  "/web/image/2383-25e321e0/sauce512.webp",
  "/web/image/2242-13c6a7af/googllog.webp",
  "/manifest.json"
];

importScripts('https://storage.googleapis.com/workbox-cdn/releases/7.3.0/workbox-sw.js');

self.addEventListener("install", (event) => {
  console.log('[Service Worker] Installing...');
  event.waitUntil(
    caches.open(cacheName).then((cache) => {
      console.log('[Service Worker] Caching static assets');
      return cache.addAll(staticAssets);
    }).catch(error => console.error('[Service Worker] Cache addAll failed:', error))
  );
});

self.addEventListener("fetch", (event) => {
  const url = new URL(event.request.url);
  const isStaticAsset = staticAssets.includes(url.pathname);
  const isNavigation = event.request.mode === "navigate" || (event.request.headers.get("accept") && event.request.headers.get("accept").includes("text/html"));

  if (isStaticAsset) {
    event.respondWith(
      caches.match(event.request).then((response) => {
        return response || fetch(event.request);
      })
    );
  } else if (isNavigation) {
    event.respondWith(
      fetch(event.request).catch(() => {
        console.log('[Service Worker] Network fetch failed, checking for offline page or static assets.');
        return caches.match("/offpage").then(offlineResponse => {
          if (offlineResponse) {
            return offlineResponse;
          }
          console.log("[Service Worker] No offline page found, returning generic offline page");
          return new Response("<h1>Offline</h1><p>You are currently offline. Please check your internet connection.</p>", {
            headers: { 'Content-Type': 'text/html' },
            status: 503, // Service Unavailable
            statusText: "Service Unavailable"
          });
        });
      })
    );
  }
});

self.addEventListener("message", (event) => {
  if (event.data && event.data.type === "SKIP_WAITING") {
    self.skipWaiting();
  }
});
